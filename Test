give me api and body request response

inventory management - lociking and deducting stock payment processing, - integration with stripe and razorpay order tracking - processing -> shipped -> delivered and shipping integration - connect with 3rd party apis like shiprocket
A full-fledged system for inventory management, payment processing, order tracking, and shipping requires a series of API endpoints. The following is a detailed breakdown of the API requests and example responses for each functional area.
Inventory management: Locking and deducting stock
This process involves two main steps: temporarily reserving stock when a customer begins the checkout process and permanently deducting it once payment is confirmed.
Lock stock
When a customer adds an item to their cart, this API call reserves the stock for a limited time to prevent other customers from purchasing it.
API: POST /api/v1/inventory/lock
Request body
json
{
    "order_id": "ORD_12345",
    "items": [
        {
            "sku": "PROD-SKU-001",
            "quantity": 2
        },
        {
            "sku": "PROD-SKU-002",
            "quantity": 1
        }
    ]
}
Use code with caution.

Response body (success)
json
{
    "status": "success",
    "message": "Stock locked for order ORD_12345",
    "locked_items": [
        {
            "sku": "PROD-SKU-001",
            "locked_quantity": 2
        },
        {
            "sku": "PROD-SKU-002",
            "locked_quantity": 1
        }
    ]
}
Use code with caution.

Response body (failure - insufficient stock)
json
{
    "status": "error",
    "message": "Failed to lock stock for order ORD_12345",
    "unavailable_items": [
        {
            "sku": "PROD-SKU-001",
            "available_quantity": 1
        }
    ]
}
Use code with caution.

Deduct stock
After a successful payment, this API call permanently reduces the inventory count.
API: POST /api/v1/inventory/deduct
Request body
json
{
    "order_id": "ORD_12345"
}
Use code with caution.

Response body (success)
json
{
    "status": "success",
    "message": "Stock deducted for order ORD_12345"
}
Use code with caution.

Payment processing: Integrating with Stripe and Razorpay
The standard approach for integrating payment gateways is to create an order or payment intent on the server and use the returned ID to complete the payment on the client side.
Initiate payment with Stripe
API: POST /api/v1/payments/stripe/create-intent
Request body
json
{
    "order_id": "ORD_12345",
    "amount": 5000,
    "currency": "usd",
    "customer_details": {
        "name": "John Doe",
        "email": "john.doe@example.com"
    }
}
Use code with caution.

Response body
json
{
    "status": "success",
    "client_secret": "pi_xyz_secret_abc",
    "payment_intent_id": "pi_xyz"
}
Use code with caution.

Initiate payment with Razorpay
API: POST /api/v1/payments/razorpay/create-order
Request body
json
{
    "order_id": "ORD_12345",
    "amount": 50000,
    "currency": "INR",
    "receipt": "receipt#1",
    "notes": {
        "order_id": "ORD_12345"
    }
}
Use code with caution.

Response body
json
{
    "id": "order_abc",
    "entity": "order",
    "amount": 50000,
    "currency": "INR",
    "status": "created"
}
Use code with caution.

Order tracking: Processing → shipped → delivered
A webhook-based system is typically used for tracking, where status updates are pushed from the shipping provider to your system.
Webhook for status updates
API: POST /api/v1/webhooks/order-status-update
Request body (from Shiprocket)
json
{
    "event": "shipment_delivered",
    "payload": {
        "order_id": "SR123456",
        "awb_code": "AWB789",
        "status_code": 11,
        "current_status": "Delivered",
        "order_ref_id": "ORD_12345",
        "etd": "2025-09-05T10:00:00Z"
    }
}
Use code with caution.

Response body (acknowledge webhook)
json
{
    "status": "success",
    "message": "Webhook received and processed"
}
Use code with caution.

Shipping integration: Connect with Shiprocket
To automate shipping, you'll need to create orders in Shiprocket and generate shipping labels via their API.
Authenticate with Shiprocket
API: POST https://apiv2.shiprocket.in/v1/external/auth/login
Request body
json
{
    "email": "yourapiuser@example.com",
    "password": "your_api_password"
}
Use code with caution.

Response body
json
{
    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjE4NTU5NSwiaXNzIjoiaHR0cHM6Ly9hcGl2Mi5zaGlwcm9ja2V0LmluL2FwaS92MS9leHRlcm5hbC9hdXRoL2xvZ2luIiwiaWF0IjoxNjI3OTcyNTkzLCJleHAiOjE2Mjg4MzY1OTMsIm5iZiI6MTYyNzk3MjU5MywianRpIjoiT1VqN2E0cERuQ1A4VmxnNCIsImRhdGEiOnsiZW1haWwiOiJhcGl1c2VyMTIzNDVAc2hpcHJvY2tldC5jb20iLCJpZCI6MTg1NTk1LCJyb2xlIjoxfX0.iN8Xy2t7l5-j12345"
}
Use code with caution.

Create a Shiprocket order
API: POST https://apiv2.shiprocket.in/v1/external/orders/create/adhoc
Request body
json
{
    "order_id": "ORD_12345",
    "order_date": "2025-09-01",
    "channel_id": "",
    "billing_customer_name": "John Doe",
    "billing_address": "123 Main St",
    "billing_city": "Mumbai",
    "billing_pincode": "400001",
    "billing_state": "Maharashtra",
    "billing_country": "India",
    "shipping_customer_name": "John Doe",
    "shipping_address": "123 Main St",
    "shipping_city": "Mumbai",
    "shipping_pincode": "400001",
    "shipping_state": "Maharashtra",
    "shipping_country": "India",
    "order_items": [
        {
            "name": "Product A",
            "sku": "PROD-SKU-001",
            "units": 2,
            "selling_price": 2500,
            "hsn": 441
        }
    ]
}
Use code with caution.

Response body
json
{
    "status": {
        "id": 2,
        "name": "Processing",
        "description": "The order has been created successfully."
    },
    "order_id": "SR123456",
    "shipment_id": 123456,
    "awb_code": null,
    "courier_id": null
}
Use code with caution.

AI responses may include mistakes. Learn more




undefined
undefined
undefined
5 sites
Shiprocket API
Dec 23, 2021 — Shiprocket API. Welcome to Shiprocket's API Documentation. We've designed this document to help developers and Shiprocket users fully understand and integrate o...
favicon
Shiprocket API

Shiprocket API | Documentation | Postman API Network
Shiprocket API Documentation. Welcome to Shiprocket's API Documentation. We've designed this document to help developers and Shiprocket users fully understand a...
favicon
Postman

The Payment Intents API - Stripe Documentation
Learn how to use the Payment Intents API for Stripe payments. * Use the Payment Intents API to build an integration that can handle complex payment flows with a...
favicon
Stripe Documentation

Show all
